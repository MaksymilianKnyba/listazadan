version: '3.8'

services:
  # Serwer Apache, który będzie wyświetlał stronę HTML
  server:
    build: ./server
    container_name: apache-server
    networks:
      - mynetwork
    ports:
      - "8081:80"
    volumes:
      - ./server/index.html:/var/www/html/index.html

  # Klient, który będzie próbował połączyć się z serwerem Apache
  client:
    build: ./client
    container_name: client
    networks:
      - mynetwork
    depends_on:
      - server
    entrypoint: ["curl", "server:80"]

  # Serwer bazodanowy MySQL
  db:
    image: mysql:latest
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: stronawww
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - mynetwork
    ports:
      - "3307:3306"

  # Monitoring Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - mynetwork
    ports:
      - "9090:9090"

  # Wizualizacja metryk Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - mynetwork
    ports:
      - "3000:3000"

# Serwis dla aplikacji Flask
  flask:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"  # Mapowanie portu 5000 na port 5000 w systemie hosta
    depends_on:
      - db  # Flask zależy od MySQL, jeśli będzie używać bazy danych
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  db_data:
